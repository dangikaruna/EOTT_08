
require('dotenv').config();
var ip = require("ip");



exports.configurations = {
  //To enable https
  httpsEnable: false,
  httpsOptions: {
    // ca: fs.readFileSync('certificates/UTCA.pem', "utf8"),  // CA certificate
    // key: fs.readFileSync('certificates/key.pem', "utf8"),  // Client's private key
    // cert: fs.readFileSync('certificates/altengt-digital_in.pem', "utf8"),  // Client's certificate
  },

  Database: {
    //development and testing pupose
    username: process.env.MYSQL_USER_development,
    password: process.env.MYSQL_PASSWORD_development,
    host: process.env.MYSQL_HOST_development,
    databaseName: process.env.MYSQL_SOURCE_DB_development,
    dialect: "mysql",

    targetDBForMigration: process.env.MYSQL_TARGET_DB_development, //merging db information
  },
  //user path access details
  PublicRoutes: [
    "/login",
    "/logout",

  ],

  //Email details
  Email: {},

  //Application host and port
  AltenApplication: {
    host: ip.address(),
    port: 5000,
  },
  //Error Log
  errorLogId: "file",
  //Jsonwebtokens
  jwtSecret: process.env.JWT_SECRET,
  jwtLifetime: "1d",
  userSession: [],
  sessionTimeout: 3600000, //session timeout time  1 hour
  Messages: {


    common: {
      provideDetails: `Please provide proper details`,
      noDataAvailableForCompare: `No modules created from selected Reference BOM`,
      noData: "No data available",
      error: "An error occurred.Please try again later",
      invalidModuleId: `invalid moduleId`,
      compareProvideDetails: `Please select reference for comparing`,
    },

    signUp: {
      cantGetAccessLevel: "Can't get all users. Please try again later.",
      gidAlreadyExists:
        "GID already present. Please try again with a different GID",
      emailAlreadyExists: "Email already registered",
      cantSignUp: "Unable to register user. Please try again",
      SignUp: "Registered successfully",
      provideSignUpDetails: "Please provide all details",
      cantGetAccessType: "Can't get all users. Please try again later.",
      cantGetAllRequest: "Can't get all users. Please try again later.",
      cantGetRequestCount: "Can't get all users. Please try again later.",
      provideRequestAccess: "Please provide all details",
      provideAccessTypeId: "Invalid accessTypeId",
      cantRequestAccess: "Unable to request . Please try again",
      userAlreadyExists: "User already exists.Try logging in.",
    },
    login: {
      cantgetAllUsers: "Can't get all users. Please try again later.",
      provideGrantAccessAllDetails: "Please provide all details",
      cantApproveOrReject: "Can't approve/reject. Please try again later.",
      provideUpdatePasswordDetails: "Please provide proper credentials",
      samePassword: `Password cannot be same as previous password, please try again`,
      providedInvalidUser: "Invalid user Credentials",
      passwordUpdated: "Password updated successfully",
      cantUpdatePassword: "Couldn't update password; try again later.",
      validationFailed: "Validation failed; try again later.",
      ValidationSucceeded: "Validated successfully",
      InvalidLogin: "Login failed. Invalid Credentials",
      provideLoginDetails: "Login failed. Please provide GID and password",
      loginFailedMessage:
        "Login failed. Try again or register if you don't have an account.",
      loginSuccessfully: "Logged in successfully",
      cantLogin: "Login Failed",
      alreadyLogin: "Already logged in, please logout and try again.",
      gidNotFound: "User not found",
      userNotFound: "User not found",
      gidDeleted: "User deleted successfully",
      updateUserAccessLevel: "User access levels updated successfully",
      errorMessage: "An error has occurred, Please try again later.",
      ssoLoginFail: `Access Denied. It seems you donâ€™t have permission to access this application. Please check with your application administrator to request access.`,
    },
    logout: {
      provideErr: "Please provide details",
      success: "Logged out successfully",
      userAbsent: "User not present, Please signup",
      loginabsent: "Please login to continue",
      Error: "Error has occurred; please try again later.",
    },
  },
  logger: {
    //userlogin
    addProxyLogger: "ADD PROXY API HAS BEEN HIT",
    loginLogger: "LOGIN API HAS BEEN HIT",
    getAllUsersLogger: "GET ALL USERS API HAS BEEN HIT",
    getAllAccessLevelLogger: "GET ALL ACCESSLEVEL API HAS BEEN HIT",
    getAllAccessDataLogger: "GET ALL ACCESSDATA API HAS BEEN HIT",
    addUserLogger: "ADD USER API HAS BEEN HIT",
    deleteUserLogger: "DELETE USER API HAS BEEN HIT",
    updateUserLogger: "UPDATE USER API HAS BEEN HIT",
    getAllAccessTypeLogger: "GET ALL ACCESSTYPE API HAS BEEN HIT",
    deleteProxyLogger: "DELETE PROXY API HAS BEEN HIT",
    getProxyLogger: "GET ALL PROXY API HAS BEEN HIT",
    createSuccessorGidLogger: "CREATE SUCCESSOR GID API HAS BEEN HIT",
    logout: "LOGOUT  API HAS BEEN HIT",
    //components
    getAllComponentsLogger: "GET ALL COMPONENTS API HAS BEEN HIT",
    updateComponenTypeLogger: "UPDATE  COMPONENT TYPE API HAS BEEN HIT",
    deleteComponenTypeLogger: "DELETE  COMPONENT TYPE API HAS BEEN HIT",
    updateDropdownLogger: "UPDATE  DROPDOWN API HAS BEEN HIT",
    deleteDropdownLogger: "DELETE  DROPDOWN API HAS BEEN HIT",
    getAllPartNumber: `GET ALL SINGLE WINDCHILL PART NUMBER`,
    addCustomComponents: `ADD CUSTOM COMPONENT API HAS BEEN HIT`,
    importCustomComponents: `IMPORT CUSTOM COMPONENT API HAS BEEN HIT`,
    updateCustomComponents: `UPDATE CUSTOM COMPONENT API HAS BEEN HIT`,
    deleteCustomComponents: `DELETE CUSTOM COMPONENT API HAS BEEN HIT`,
    deleteComponentConfirmation: `DELETE CUSTOM COMPONENT CONFIRMATION API HAS BEEN HIT`,
    getAllCustomComponents: `GET ALL CUSTOM COMPONENTS API HAS BEEN HIT`,
    getByPartNumber: `GET DETAILS BY PART NUMBER API HAS BEEN HIT`,
    getByCustomComponentId: `GET DETAILS BY CUSTOM COMPONENT ID API HAS BEEN HIT`,
    searchCustomComponents: `SEARCH CUSTOM COMPONENT API HAS BEEN HIT`,
    getComponentUsageReportDetailsForHwm: `GET COMPONENT USAGE REPORT DETAILS FOR HWM API HAS BEEN HIT`,
    getComponentUsageReportForVariant: `GET COMPONENT USAGE REPORT FOR Variant API HAS BEEN HIT`,
    getCountforsearchCustomComponents: `GET COUNT FOR SEARCH CUSTOM COMPPONENTS HAS BEEN HIT`,
    getImportValuesForPartlist: `GET IMPORT VALUES FOR PARTLIST HAS BEEN HIT`,
    searchComponentsForPartlist: `SEARCH COMPONENTS FOR PARTLIST HAS BEEN HIT`,
    getAllVersionsByLayoutNameForVariant: `GET ALL VERSIONS BY LAYOUT NAME FOR VARIANT HAS BEEN HIT`,
    getComponentDropdownValuesLogger: `GET COMPONENT DROPDOWN VALUES API HAS BEEN HIT`,
    createNewCurrencyExchangeRate: `CREATE NEW CURRENCY EXCHANGE RATE API HAS BEEN HIT`,
    updateDefaultPropertiesOrder: `UPDATE DEFAULT PROPERTIES ORDER API HAS BEEN HIT `,
    updateMultipleReferenceDesignator: `UPDATE MULTIPLE REFERNCE DESIGNATION API HAS HIT`,
    getDefaultComponentsProperties: `GET DEFAULT COMPONENT PROPERTIES API HAS BEEN HIT`,
    getComponentTemplateLogger: `GET COMPONENT TEMPLATE API HAS BEEN HIT`,
    //HWLM
    createModuleCombination: `HWLM MODULE COMBINATION API HAS BEEN HIT`,
    createHwlmCircuitModule: `HWLM CIRCUIT MODULE API HAS BEEN HIT`,
    updateHwlm: `UPDATE HWLM API HAS BEEN HIT`,
    getAllHwlmProperties: `GET ALL HWLM PROPERTIES API HAS BEEN HIT`,
    createHwlmDetails: "CREATE HWLM API HAS BEEN HIT",
    getAllHwlmDetails: "GET ALL HWLM DETAILS API HAS BEEN HIT",
    getHwlmDetails: "GET HWLM DETAILS API HAS BEEN HIT",
    getDetailsByHwlmName: "GET DETAILS BY HWLM NAME API HAS BEEN HIT ",
    getAllHwlmNames: `GET ALL HWLM NAMES API HAS BEEN HIT`,
    getHwlmCircuitModule: "GET HWLM CIRCUIT MODULE API HAS BEEN HIT",
    getHwlmModuleCombination: "GET HWLM MODULE COMBINATION API HAS BEEN HIT",
    getHwlmUsageReportForLayout:
      "GET HWLM USAGE REPORT FOR LAYOUT API HAS BEEN HIT",
    getCountForSearchHwlm: `GET COUNT FOR SEARCH HWLM HAS BEEN HIT`,
    searchHwlmDetails: `SEARCH HWLM DETAILS HAS BEEN HIT`,
    updateCircuitModuleInputWay: `UPDATE CIRCUIT MODULE INPUT WAY API HAS BEEN HIT`,
    updateHwlmPropertiesOrder: `UPDATE HWLM PROPERTIES ORDER API HAS BEEN HIT`,
    deleteHwlmDetails: `DELETE HWLM DETAILS API HAS BEEN HIT`,
    deleteHwlmDetailsConfirmation: `DELETE HWLM DETAILS CONFIRMATION API HAS BEEN HIT`,
    getMentorFileTemplateLogger: `GET MENTOR FILE TEMPLATE API HAS BEEN HIT`,
    //HWM
    deleteHwmDetailsConfirmation: `DELELTE HWM DETAILS CONFIRMATION API HAS BEEN HIT`,
    updateHwmPropertiesOrderLogger:
      "UPDATE HWM PROPERTIES ORDER API HAS BEEN HIT",
    updateHwmDetails: `UPDATE HWM DETAILS API HAS BEEN HIT`,
    createHwmDetails: `CREATE HWM DETAILS API HAS BEEN HIT`,
    createHwmModuleCombination: `CREATE/UPDATE HWM MODULE COMBINATION API HAS BEEN HIT`,
    createHwmCircuitModule: `CREATE/UPDATE HWM CIRCUIT MODULE API HAS BEEN HIT`,
    getAllHwmProperties: `GET ALL HWM PROPERTIES API HAS BEEN HIT`,
    getAllHwmDetails: "GET ALL HWM DETAILS API HAS BEEN HIT",
    getAllHwmNames: `GET ALL HWM NAMES API HAS BEEN HIT`,
    getHwmCircuitModule: "GET HWM CIRCUIT MODULE API HAS BEEN HIT",
    getDetailsByHwmName: "GET DETAILS BY HWM NAME API HAS BEEN HIT ",
    getHwmCircuitModuleForSanityCheck:
      "GET HWM CIRCUIT MODULE FOR SANITY CHECK API HAS BEEN HIT",
    getHwmModuleCombination: "GET HWM MODULE COMBINATION API HAS BEEN HIT",
    getHwmUsageReportForVariant:
      "GET HWM USAGE REPORT FOR VARIANT API HAS BEEN HIT",
    getCountForSearchHwm: `GET COUNT FOR SEARCH HWM HAS BEEN HIT`,
    searchHwmDetails: `SEARCH HWM DETAILS HAS BEEN HIT`,
    getHwmDetails: "GET HWM DETAILS API HAS BEEN HIT",
    createHwmNewVersion: `CREATE HWM NEW VERSION API HAS BEEN HIT`,
    getNameVersionByHwlmName: `GET NAME VERSION BY HWLM NAME API HAS BEEN HIT`,
    getAllVersionsByHwmName: `GET ALL VERSIONS BY HWM NAME API HAS BEEN HIT`,
    deleteHwmPoolDetails: `DELETE HWM POOL DETAILS API HAS BEEN HIT`,
    getAllHwmByVersions: `GET ALL HWM BY VERSION API HAS BEEN HIT`,
    getVersionsByHwmName: `GET VERSIONS BY HWM NAME API HAS BEEN HIT`,
    getLatestHwmSanityCheckSummary: `GET LATEST HWM SANITY CHECK SUMMARY API HAS BEEN HIT`,
    //Layout
    getAllLayoutProperties: `GET ALL LAYOUT PROPERTIES API HAS BEEN HIT`,
    createLayoutDetails: `CREATE LAYOUT API HAS BEEN HIT`,
    updateLayout: `UPDATE LAYOUT API HAS BEEN HIT`,
    getAllLayoutDetails: "GET ALL LAYOUT DETAILS API HAS BEEN HIT",
    getLayoutDetails: `GET LAYOUT DETAILS API HAS BEEN HIT`,
    getBuildLayout: `GET BUILD LAYOUT API HAS BEEN HIT`,
    createLayoutCombination: `CREATE OR UPDATE LAYOUT COMBINATION API HAS BEEN HIT`,
    createBuildLayout: `CREATE OR UPDATE BUILD LAYOUT API HAS BEEN HIT`,
    getLayoutCombination: `GET LAYOUT COMBINATION API HAS BEEN HIT`,
    getAllLayoutNames: `GET ALL LAYOUT NAMES API HAS BEEN HIT`,
    getAllVersionsByLayoutName: `GET ALL VERSIONS BY LAYOUT NAME API HAS BEEN HIT`,
    getHwlmForBuildLayout: `GET HWLM FOR BUILD LAYOUT API HAS BEEN HIT`,
    viewBuildLayout: `VIEW BUILD LAYOUT API HAS BEEN HIT`,
    createLayoutNewVersion: `CREATE LAYOUT NEW VERSION API HAS BEEN HIT`,
    getCountForsearchLayout: `GET COUNT FOR SEARCH LAYOUT HAS BEEN HIT`,
    searchLayoutDetails: `SEARCH LAYOUT DETAILS API HAS BEEN HIT`,
    deleteLayoutDetails: `DELETE LAYOUT DETAILS API HAS BEEN HIT`,
    deleteLayoutDetailsConfirmation: `DELETE LAYOUT DETAILS CONFIRMATION API HAS BEEN HIT`,
    getAllLayoutByVersion: `GET ALL LAYOUT BY VERSION API HAS BEEN HIT`,
    getVersionsByLayoutName: `GET VERSIONS BY LAYOUT NAME API HAS BEEN HIT`,
    getLatestLayoutSanityCheckSummary: `GET LATEST LAYOUT SANITY CHECK SUMMARY API HAS BEEN HIT`,
    //Variant
    getVariantCombination: `GET VARIANT COMBINATION API HAS BEEN HIT`,
    createVariantCombination: `CREATE OR UPDATE VARIANT COMBINATION API HAS BEEN HIT`,
    updateVariant: `UPDATE VARIANT API HAS BEEN HIT`,
    createVariantDetails: `CREATE VARIANT API HAS BEEN HIT`,
    getAllVariantDetails: "GET ALL  VARIANT DETAILS API HAS BEEN HIT",
    getAllVariantProperties: `GET ALL VARIANT PROPERTIES API HAS BEEN HIT`,
    getVariantDetails: `GET VARIANT DETAILS API HAS BEEN HIT`,
    createVariantNewVersion: `CREATE VARIANT NEW VERSION API HAS BEEN HIT`,
    getCountForsearchVariant: `GET COUNT FOR SEARCH VARIANT HAS BEEN HIT`,
    searchVariantDetails: `SEARCH VARIANT DETAILS HAS BEEN HIT`,
    createBuildVariant: `CREATE OR UPDATE BUILD VARIANT API HAS BEEN HIT`,
    getAllVariantNames: `GET ALL VARIANT NAMES API HAS BEEN HIT`,
    getAllVersionsByVariantName: `GET ALL VERSIONS BY VARIANT NAME API HAS BEEN HIT`,
    getHwmForBuildVariant: `GET HWM FOR BUILD VARIANT API HAS BEEN HIT`,
    viewBuildVariant: `VIEW BUILD VARIANT API HAS BEEN HIT`,
    getBuildVariant: `GET BUILD VARIANT API HAS BEEN HIT`,
    getVariantCircuitModuleForSanityCheck: `GET VARIANT CIRCUIT MODULE FOR SANITY CHECK HAS BEEN HIT`,
    getLatestVariantSanityCheckSummary: `GET LATEST VARIANT SANITY CHECK SUMMARY API HAS BEEN HIT`,
    getModuleDropdownValuesVariant: `GET MODULE DROPDOWN VALUES API HAS BEEN HIT`,
    deleteVariantDetails: `DELETE VARIANT DETAILS API HAS BEEN HIT`,
    getAllVariantByVersions: `GET ALL VARIANT BY VERSIONS API HAS BEEN HIT`,
    getVersionsByVariantName: `GET VERSIONS BY VARIANT NAME API HAS BEEN HIT`,
    updateVariantDetails: `UPDATE VARIANT API HAS BEEN HIT`,
    //componentCustomization
    addComponentTypeLogger: `ADD COMPONENT TYPE API HAS BEEN HIT`,
    addComponentTypeDropdownLogger: `ADD COMPONENT TYPE DROPDOWN API HAS BEEN HIT`,
    addComponentTypePropertiesLogger: `ADD COMPONENT TYPE PROPERTIES API HAS BEEN HIT`,
    updateComponentTypePropertiesLogger: `UPDATE COMPONENT TYPE PROPERTIES API HAS BEEN HIT `,
    deleteComponentTypeDropdownLogger: `DELETE COMPONENT TYPE DROPDOWN API HAS BEEN HIT`,
    deleteComponentTypePropertiesLogger: `DELETE COMPONET TYPE PROPERTIES API HAS BEEN HIT`,
    getAllComponentCustomizationDetailsLogger: `GET ALL COMPONENT CUSTOMIZATION DETAILS API HAS BEEN HIT`,
    updateComponentTypeDropdownLogger: `UPDATE COMPONENT TYPE DROPDOWN API HAS BEEN HIT`,
    updateReferenceDesignatorLogger: `UPDATE REFERENCE DESIGNATOR API HAS BEEN HIT`,
    getAllDefaultPropertiesLogger: `GET ALL DEFAULT PROPERTIES API HAS BEEN HIT`,
    //hwlmCustomization
    addHwlmDropdownLogger: `ADD HWLM DROPDOWN API HAS BEEN HIT`,
    addHwlmPropertiesLogger: `ADD HWLM PROPERTIES API HAS BEEN HIT`,
    deleteHwlmDropdownLogger: `DELETE HWLM DROPDOWN API HAS BEEN HIT`,
    deleteHwlmPropertiesLogger: `DELETE HWLM PROPERTIES API HAS BEEN HIT`,
    getAllHwlmPropertiesCustomizationLogger: `GET ALL HWLM PROPERTIES CUSTOMIZATION API HAS BEEN HIT`,
    updateHwlmDropdownLogger: `UPDATE HWLM DROPDOWN API HASS BEEN HIT`,
    updateHwlmPropertiesLogger: `UPDATE HWLM PROPERTIES API HAS BEEN HIT`,
    getDefaultModulePropertiesLogger: `GET DEFAULT MODULE PROPERTIES API HAS BEEN HIT`,
    //hwmCustomization
    addHwmPropertiesLogger: `ADD HWM PROPERTIES API HAS BEEN HIT`,
    addHwmDropdownLogger: `ADD HWM DROPDOWN API HAS BEEN HIT`,
    deleteHwmDropdownLogger: `DELETE HWM DROPDOWN API HAS BEEN HIT`,
    deleteHwmPropertiesLogger: `DELETE HWM PROPERTIES API HAS BEEN HIT`,
    getAllHwmPropertiesCustomizationLogger: `GET ALL HWM PROPERTIES CUSTOMIZATION API HAS BEEN HIT`,
    updateHwmDropdownLogger: `UPDATE HWM DROPDOWN API HASS BEEN HIT`,
    updateHwmPropertiesLogger: `UPDATE HWM PROPERTIES API HAS BEEN HIT`,
    //layoutCustomization
    addLayoutDropdownLogger: `ADD LAYOUT DROPDOWN API HAS BEEN HIT`,
    addLayoutPropertiesLogger: `ADD LAYOUT PROPERTIES API HAS BEEN HIT`,
    deleteLayoutDropdownLogger: `DELETE LAYOUT DROPDOWN API HAS BEEN HIT`,
    deleteLayoutPropertiesLogger: `DELETE LAYOUT PROPERTIES API HAS BEEN HIT`,
    getAllLayoutPropertiesCustomizationLogger: `GET ALL LAYOUT PROPERTIES CUSTOMIZATION API HAS BEEN HIT`,
    updateLayoutDropdownLogger: `UPDATE LAYOUT DROPDOWN API HASS BEEN HIT`,
    updateLayoutPropertiesLogger: `UPDATE LAYOUT PROPERTIES API HAS BEEN HIT`,
    updateLayoutPropertiesOrderLogger: `UPDATE LAYOUT PROPERTIES ORDER API HAS BEEN HIT`,
    //variantCustomization
    addVariantDropdownLogger: `ADD VARIANT DROPDOWN API HAS BEEN HIT`,
    addVariantPropertiesLogger: `ADD VARIANT PROPERTIES API HAS BEEN HIT`,
    deleteVariantDropdownLogger: `DELETE VARIANT DROPDOWN API HAS BEEN HIT`,
    deleteVariantPropertiesLogger: `DELETE VARIANT PROPERTIES API HAS BEEN HIT`,
    getAllVariantPropertiesCustomizationLogger: `GET ALL VARIANT PROPERTIES CUSTOMIZATION API HAS BEEN HIT`,
    updateVariantDropdownLogger: `UPDATE VARIANT DROPDOWN API HASS BEEN HIT`,
    updateVariantPropertiesLogger: `UPDATE VARIANT PROPERTIES API HAS BEEN HIT`,
    updateVariantPropertiesOrderLogger: `UPDATE VARIANT PROPERTIES ORDER API HAS BEEN HIT`,
    //poolDetails
    componentPoolOrderCustomization: `COMPONENT POOL ORDER CUSTOMIZATION API HAS BEEN HIT`,
    createHwmPoolDetails: `CREATE HWM POOL DETAILS API HAS BEEN HIT`,
    createHwlmPoolDetails: `CREATE HWLM POOL DETAILS API HAS BEEN HIT`,
    createLayoutPoolDetails: `CREATE LAYOUT POOL DETAILS API HAS BEEN HIT`,
    createVariantPoolDetails: `CREATE VARIANT POOL DETAILS API HAS BEEN HIT`,
    //hwlmModuleDocument
    updateHwlmModuleDocument: `UPDATE HWLM MODULE DOCUMENT API HAS BEEN HIT`,
    getAllHwlmModuleDocument: `GET ALL  HWLM MODULE DOCUMENT API HAS BEEN HIT`,
    addHwlmModuleDocument: `ADD  HWLM MODULE DOCUMENT API HAS BEEN HIT`,
    deleteHwlmModuleDocumentProperties: `DELETE HWLM MODULE DOCUMENT PROPERTIES API HAS BEEN HIT`,
    //hwmModuleDocument
    updateHwmModuleDocument: `UPDATE HWM MODULE DOCUMENT API HAS BEEN HIT`,
    getAllHwmModuleDocument: `GET ALL HWM MODULE DOCUMENT API HAS BEEN HIT`,
    addHwmModuleDocument: `ADD  HWM MODULE DOCUMENT API HAS BEEN HIT`,
    deleteHwmModuleDocumentProperties: `DELETE HWM MODULE DOCUMENT PROPERTIES API HAS BEEN HIT`,
    //layoutModuleDocument
    updateLayoutModuleDocument: `UPDATE LAYOUT MODULE DOCUMENT API HAS BEEN HIT`,
    getAllLayoutModuleDocument: `GET ALL LAYOUT MODULE DOCUMENT API HAS BEEN HIT`,
    addLayoutModuleDocument: `ADD  LAYOUT MODULE DOCUMENT API HAS BEEN HIT`,
    deleteLayoutModuleDocumentProperties: `DELETE LAYOUT MODULE DOCUMENT PROPERTIES API HAS BEEN HIT`,
    //VariantModuleDocument
    updateVariantModuleDocument: `UPDATE LAYOUT MODULE DOCUMENT API HAS BEEN HIT`,
    getAllVariantModuleDocument: `GET ALL VARIANT MODULE DOCUMENT API HAS BEEN HIT`,
    addVariantModuleDocument: `ADD  LAYOUT MODULE DOCUMENT API HAS BEEN HIT`,
    deleteVariantModuleDocumentProperties: `DELETE LAYOUT MODULE DOCUMENT PROPERTIES API HAS BEEN HIT`,
    //HwlmSanityCheck
    getAllHwlmSanityCheckSummary: `GET ALL HWLM SANITY CHECK SUMMARY API HAS BEEN HIT`,
    getHwlmPartListBySanityCheck: `GET HWLM PARTLIST FOR SANITY CHECK API HAS BEEN HIT`,
    getHwlmSanityCheck: `GET HWLM SANITY CHECK API HAS BEEN HIT`,
    getHwlmSanityCheckSummary: `GET HWLM SANITY CHECK SUMMARY API HAS BEEN HIT`,
    getLastestHwlmSanityCheckSummary: `GET LASTEST HWLM SANITY CHECK SUMMARY API HAS BEEN HIT`,
    //HwmSanityCheck
    getAllHwmSanityCheckSummary: `GET ALL HWM SANITY CHECK SUMMARY API HAS BEEN HIT`,
    getHwmPartListForSanityCheck: `GET HWM PARTLIST FOR SANITY CHECK API HAS BEEN HIT`,
    getHwmSanityCheck: `GET HWM SANITY CHECK API HAS BEEN HIT`,
    getHwmSanityCheckSummary: `GET HWM SANITY CHECK SUMMARY API HAS BEEN HIT`,
    //LayoutSanityCheck
    getAllLayoutSanityCheckSummary: `GET ALL LAYOUT SANITY CHECK SUMMARY API HAS BEEN HIT`,
    getLayoutPartListForSanityCheck: `GET LAYOUT PARTLIST FOR SANITY CHECK API HAS BEEN HIT`,
    getLayoutSanityCheck: `GET LAYOUT SANITY CHECK API HAS BEEN HIT`,
    getLayoutSanityCheckSummary: `GET LAYOUT SANITY CHECK SUMMARY API HAS BEEN HIT`,
    //VariantSanityCheck
    getAllVariantSanityCheckSummary: `GET ALL VARIANT SANITY CHECK SUMMARY API HAS BEEN HIT`,
    getVariantPartListForSanityCheck: `GET VARIANT PARTLIST FOR SANITY CHECK API HAS BEEN HIT`,
    getVariantSanityCheck: `GET VARIANT SANITY CHECK API HAS BEEN HIT`,
    getVariantSanityCheckSummary: `GET VARIANT SANITY CHECK SUMMARY API HAS BEEN HIT`,
    //currency
    createNewCurrencyCode: `CREATE NEW CURRENCY CODE API HAS BEEN HIT`,
    getExchangeRatesOfCurrency: `GET ALL EXCHANGE RATE OF CURRENCY API HAS BEEN HTI`,
    getAllCurrencyCode: `GET ALL CURRENCY CODE API HAS BEEN HIT`,
    //currencyExchangeRate.
    createNewCurrencyExchangeRates: `CREATE NEW CURRENCY EXCHANGE RATES API HAS BEEN HIT`,
    //costSimulation.
    costSimulationForHwlm: `COST SIMULATION FOR HWLM API HAS BEEN HIT`,
    costSimulationForHwm: `COST SIMULATION FOR HWM API HAS BEEN HIT`,
    costSimulationForLayout: `COST SIMULATION FOR LAYOUT API HAS BEEN HIT`,
    costSimulationForVariant: `COST SIMULATION FOR VARIANT API HAS BEEN HIT`,
    //sanitycustomization,
    sanityPropertiesOrderCustomization: `SANITY PROPERTIES ORDER CUSTOMIZATION API HAS BEEN HIT`,
    compareModulesAPIHit: `COMPARE MODULES API HAS BEEN HIT`,
    getAllHwmsForComparision: `GET ALL HWMS FOR COMPARISION API HAS BEEN HIT`,
    getAllLayoutForComparision: `GET ALL LAYOUT FOR COMPARISION API HAS BEEN HIT`,
    getAllTargetHwmsForComparision: `GET ALL TARGET HWM API HAS BEEN HIT`,
    getAllVariantsForComparision: `GET ALL VARIANT FOR COMPARISION API HAS BEEN HIT`,
    getTargetHwms: `GET TARGET HWM FOR HWLM-HWM COMPARISION API HAS BEEN HIT`,
    getTargetVariantForVariantsCompare: `GET TARGET VARIANT FOR VARIANT TO VARIANT COMPARE`,
    getTargetVariantOfLayout: `GET TARGET VARIANT FOR LAYOUT API HAS BEEN HIT`,
    hwlmToHwmMentorFileCompare: `HWLM TO HWM MENTOR FILE COMPARE API HAS BEEN HIT`,
    hwmToHwmMentorFileCompare: `HWM TO HWM MENTOR FILE COMPARE`,
    layoutToVariantMentorCompare: `LAYOUT TO VARIANT MENTOR COMPARE API HAS BEEN HIT`,
    moduleNames: `MODULE NAMES API HAS BEEN HIT`,
    variantToVariantMentorCompare: `VARIANT TO VARIANT MENTOR COMPARE API HAS BEEN HIT`,
    getAllSanityDefaultProperties: `GET ALL SANITY DEFAULT PROPERTIES APT HAS BEEN HIT`,
    getAllSanityPool: `GET ALL SANITY POOL API HAS BEEN HIT`,
    //circiut
    getdefaultCircuitModuleService: `GET DEFAULT CIRCUIT MODULE API HAS BEEN HIT`,
    updateDefaultCircuitModule: `UPDATE DEFAULT CIRCUIT MODULR API HAS BEEN HIT`,

    //ECAD
    eCadDownloadForComponent: `ECAD DATA DOWNLOAD FOR COMPONENT API HAS BEEN HIT`,
    getECadOrderOfComponent: `GET ECAD ORDER OF COMPONENT API HAS BEEN HIT`,
    //proxy
    getAccessLevelNameByGidLogger: `GET ACCESS LEVELNAME BY GID API HAS BEEN HIT`,
    getAllMatchedAccessLevelUsersByGidLogger: `GET ALL MATCHED ACCESSLEVEL USER BY GID API HAS BEEN HIT`,
    getAllModuleDataByGidLogger: `GET ALL MODULE DATA BY GID API HAS BEEN HIT`,
    updateProxyLogger: `UPDATE PROXY API HAS BEEN HIT`,

    //history
    getDefaultPropertiesOfComponent: `GET DEFAULT PROPERTIES OF COMPONENTS API HAS BEEN HIT`,
    getComponentTypes: `GET COMPONENT TYPES API HAS BEEN HIT`,
    getDetailedHistoryOfComponents: `GET DETAILED HISTORY OF COMPONENTS API HAS BEEN HIT`,
    getHistoryReportOfComponents: `GET HISTORY REPORT OF COMPONENT API HAS BEEN HIT`,
    getDetailedHistoryOfModules: `GET DETAILED HISTORY OF MODULES API HAS BEEN HIT`,
    getHistoryReportOfModules: `GET HISTORY REPORT OF MODULES API HAS BEEN HIT`,
    getModuleProperty: `GET MODULE PROPERTY API HAS BEEN HIT`,
  },
}